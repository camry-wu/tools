<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
	   http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- Autowired -->
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

	<!-- context
	<context:annotation-config />
	<context:component-scan base-package="net.vitular.tools.auth"/> -->

	<!-- Configurer that replaces ${...} placeholders with values from properties files -->
	<!-- (in this case, mail and JDBC related properties) -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:jdbc.properties</value>
				<value>classpath*:auth.properties</value>
			</list>
		</property>
	</bean>

	<!-- ========================= DB CONFIGURATION ======================== -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />		
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="18000000" />
		<property name="testOnBorrow" value="true" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan">
			<list>
				<value>net.vitular.tools.auth</value>
			</list>
		</property>
		<!--
		<property name="mappingJarLocations">  
			<list>     			
				<value>WEB-INF/lib/fortiframe.jar</value>  
			</list>
		</property>
		cacheableMappingLocations
		cacheRegionFactory
		<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
		-->
		<property name="hibernateProperties">
			<props>
				<!--
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="current_session_context_class">thread</prop>
				<!--<prop key="current_session_context_class">jta</prop>-->
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<aop:aspectj-autoproxy />

	<!--
		<bean id="persistenceExceptionTranslationPostProcessor" class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="add*" propagation="REQUIRED"/>
				<tx:method name="get*" propagation="REQUIRED"/>
				<tx:method name="*" read-only="true"/>
			</tx:attributes>
		</tx:advice>

		<aop:config expose-proxy="true>
			<aop:pointcut id="txPointcut" expression="execution(* com.demo.service..*.*(..))"/>
			<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
		</aop:config>
	 -->

	<!-- ========================= Dao and Service ======================== -->

	<bean id="authorizationUserDao" class="net.vitular.tools.auth.AuthorizationUserDao">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<bean id="DBAuthorizationUserService" class="net.vitular.tools.auth.DBAuthorizationUserService">
	</bean>
</beans>
