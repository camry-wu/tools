<?xml version="1.0" encoding="UTF-8"?>
<web-app id="Cooking" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
	http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>Archetype Created Web Application</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!--<param-value>classpath:/applicationContext*.xml</param-value>-->
		<param-value>/WEB-INF/applicationContext*.xml</param-value>
	</context-param>

	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

<!--
	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
-->
	
	<!--
		- Loads the root application context of this web app at startup,
		- by default from "/WEB-INF/applicationContext.xml".
		- Note that you need to fall back to Spring's ContextLoaderServlet for
		- J2EE servers that do not follow the Servlet 2.4 initialization order.
		-
		- Use WebApplicationContextUtils.getWebApplicationContext(servletContext)
		- to access it anywhere in the web application, outside of the framework.
		-
		- The root context is the parent of all servlet-specific contexts.
		- This means that its beans are automatically available in these child contexts,
		- both for getBean(name) calls and (external) bean references.
	-->
<!--
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!--
		-Add "web-based" Spring bean scope support.
	-->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<servlet>
		<display-name>cooking</display-name>
		<servlet-name>cooking</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/cooking-servlet*.xml</param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>cooking</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- verifycode
	<servlet>
		<servlet-name>verifycode</servlet-name>
		<servlet-class>net.vitular.tools.cooking.auth.VerifyCodeServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>verifycode</servlet-name>
		<url-pattern>/util/verifycode/*</url-pattern>
	</servlet-mapping>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config> -->
	
	<!--
	<jsp-config>
		<taglib>
			<taglib-uri>/WEB-INF/struts-bean.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/struts-bean.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/struts-html.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/struts-html.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/struts-logic.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/struts-logic.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/struts-template.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/struts-template.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/struts-tiles.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/struts-tiles.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/struts-nested.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/struts-nested.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/framework.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/framework.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/framework-html.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/framework-html.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/framework-ajax.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/framework-ajax.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/framework-nested.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/framework-nested.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/centralmgr-html.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/centralmgr-html.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/centralmgr-nested.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/centralmgr-nested.tld</taglib-location>
		</taglib>
		<jsp-property-group>
			<url-pattern>*.jsp</url-pattern>
			<el-ignored>false</el-ignored>
			<scripting-invalid>false</scripting-invalid>
		</jsp-property-group>
	</jsp-config>
	-->
	
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
